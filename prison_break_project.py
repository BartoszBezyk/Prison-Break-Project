# -*- coding: utf-8 -*-
"""Prison Break Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19nkXuXrixLksxX2f8YcdXbryxzVHt1i4

### Projekt Prison Helicopter Escapes
"""

!wget http://bioinf-mw.bihz.upwr.edu.pl/resources/dataquest/helper.py -O /content/helper.py

from helper import *

# Analyzing Data

## Prison Helicopter Escapes

"""Importing helper functions from dataquest and using them to get a data"""

from helper import *

url  = 'https://en.wikipedia.org/wiki/List_of_helicopter_prison_escapes'

data = data_from_url(url)

"""Printing first three elements"""

for row in data[:3]:
    print(row)

"""Deleting last column (with description) to make data more clear. Using variable 'index' to create new data, by iterating by 'row' (The code creates new data by adding new rows without description with every loop)."""

index = 0

for row in data:
    data[index] = row[:-1]
    index += 1

"""Checking if our data doesn't have description in it"""

for row in data[:3]:
    print(row)

"""Using helper funcion (fetch_year) to extract year that incident occured."""

for row in data:
    row[0] = fetch_year(row[0])

print(data)

"""Using 'min' and 'max' function to get the earliest and latest year of incident"""

min_year = min(data, key=lambda x: x[0])[0]
max_year = max(data, key=lambda x: x[0])[0]

"""Creating a list of years in which incidents occured."""

years = []
for y in range(min_year, max_year + 1):
    years.append(y)

attempts_per_year = []
print(attempts_per_year)
print(years)
print(len(years))

"""Creating a list of years when escapes happend with the incident counter (starting with 0)"""

for i in years:
    attempts_per_year.append([i, 0])

print(attempts_per_year)

"""Adding a number of events to each year"""

for row in data:
    for ya in attempts_per_year:
        y = ya[0]
        if row[0] == y:
            ya[1] += 1

print(attempts_per_year)

"""Creating a plot that shows in which year did the most attempts at breaking out of prison with a helicopter occur."""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
barplot(attempts_per_year)

"""Using data frame and helper functions to show wchich country has the most Helicopter escapes attempts."""

countries_frequency = df["Country"].value_counts()

print_pretty_table(countries_frequency)